call plug#begin('~/.vim/plugged')
Plug 'joshdick/onedark.vim'
Plug 'iCyMind/NeoSolarized'

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

Plug 'preservim/nerdtree'
Plug 'https://github.com/ctrlpvim/ctrlp.vim'
Plug 'https://github.com/mileszs/ack.vim'

Plug 'neovim/nvim-lspconfig'

Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-telescope/telescope.nvim'
Plug 'nvim-telescope/telescope-fzf-native.nvim', { 'do': 'make' }

Plug 'kyazdani42/nvim-web-devicons'

call plug#end()

syntax on
colorscheme onedark

let g:airline_solarized_bg='dark'

let mapleader = " "

" Movement
nnoremap <leader>h :wincmd h<CR>
nnoremap <leader>j :wincmd j<CR>
nnoremap <leader>k :wincmd k<CR>
nnoremap <leader>l :wincmd l<CR>

" Nerd Tree Configuration
nnoremap <C-n> :NERDTreeToggle<CR>

" Ctrl + p Configuration
let g:ctrlp_map = "<leader>p"

if executable('rg')
  set grepprg=rg
  let g:ctrlp_working_path_mode = 'ra'
  let g:ctrlp_user_command = 'wslpath -w %s | rg --files | xargs -L1 -d "\n" wslpath -u'
  let g:ctrlp_default_input = 0
  let g:ctrlp_use_caching = 1
endif

" Other
set expandtab
set ts=2 sw=2

set number

set spelllang=en
set spell


" highlight ColorColumn ctermbg=red
" set cc=80
nnoremap <Leader><CR> :so ~/.config/nvim/init.vim<CR>
nnoremap <Leader>ec :edit ~/.config/nvim/init.vim<CR>

" Find files using Telescope command-line sugar.
nnoremap <leader>ff <cmd>Telescope find_files<CR>
nnoremap <leader>fg <cmd>Telescope live_grep<CR>

" lsp bindings
nnoremap <leader>gD <cmd>lua vim.lsp.buf.declaration()<CR>
nnoremap <leader>gd <cmd>lua vim.lsp.buf.definition()<CR>
nnoremap t <cmd>lua vim.lsp.buf.hover()<CR>
nnoremap <leader>R <cmd>lua vim.lsp.buf.rename()<CR>
nnoremap <leader>er :lua vim.lsp.diagnostic.show_line_diagnostics()<CR>

lua << EOF

require'lspconfig'.gopls.setup{}

local home = vim.env["HOME"]
local omnisharp_bin = home .. "/omnisharp/run"
require'lspconfig'.omnisharp.setup{
  cmd = { omnisharp_bin, "--languageserver" , "--hostPID", tostring(pid) };
}

require('telescope').setup {
  extensions = {
    fzf = {
      fuzzy = true,
      override_generic_sorter = true,
      override_file_sorter = true,
      case_mode = "smart_case",
    }
  }
}

require('telescope').load_extension('fzf')
EOF
